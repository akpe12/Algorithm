# Insertion sort
# 1번째 인덱스의 요소를 n이라고 할 때
# n번째 요소부터 마지막 번째 요소까지 탐색한다.
# 탐색 과정은 이러하다.
# n번째 요소가 n - 1번째 요소보다 작으면
# n -1번째 요소가 n번째 요소보다 작을 때까지
# n의 위치를 swap해준다.

# 시간복잡도는 best case에서 O(n)이며, 이미 정렬되어 있을 때 best case이다.
# worst case는 배열이 정렬하려고 하는 순서의 반대로 정렬되어 있을 때
# 오름차순 삽입 정렬을 할 때, 내림차순 되어 있는 배열이 주어진다면
# O(n^2)이다.

arr = [3, 1, 6, 8, 2, 5, 9, 4, 7]

for i in range(1, len(arr)):
    for j in range(i, 0, -1):
        if arr[j] < arr[j - 1]:
            arr[j], arr[j - 1] = arr[j - 1], arr[j]

# print(arr)
