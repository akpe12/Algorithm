힙 정렬의 과정은 아래와 같다.

1. 데이터를 힙 구조로 만든다.

2. 힙 트리 안에서 맨 마지막에 있는 요소와 루트 노드를 스왑한다.

3. 맨 마지막 요소를 제거해주고, 루트 노드에 자리에서 heapify를 시행한다.

4. 위의 과정을 반복한다.

구현:

def max_heapify(arr, i):
    l = 2 * i      # i의 왼쪽 자식 노드
    r = 2 * i + 1  # i의 오른쪽 자식 노드
    largest = 0
    
    if l < len(arr) and arr[l] > arr[i]:
        largest = l
    else:
        largest = i
    if r < len(arr) and arr[r] > arr[largest]:
        largest = r
    
    # 부모 노드가 largest가 아니면
    # largest와 i를 서로 swap 해준다.
    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i]
        max_heapify(arr, largest)
        
def heap_sort(arr):
    sortedArr = []
    while len(arr) > 1:
        arr[1], arr[len(arr) - 1] = arr[len(arr) - 1], arr[1]
        sortedArr.append(arr[len(arr) - 1])
        arr.remove(arr[len(arr) - 1])
        max_heapify(arr, 1)
    return sortedArr        
