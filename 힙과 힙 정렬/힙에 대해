* 힙이란?
힙은 완전 이진 트리 구조를 지닌 자료구조이다.
이를 이용한 힙 정렬은 퀵 정렬이나 병합 정렬 정도의 시간복잡도를 가질 만큼 되게 빠른 정렬 시간을 가진다.

* 시간복잡도
heapify를 하는 데에 O(N)
탐색 시간 O(log N)

따라서 O(N log N)

* 힙을 사용하는 우선순위 큐
그리고 힙을 이용한 자료구조로는 우선순위 큐가 있다.
보통 우선순위 큐를 구현하기 위해서는 힙을 사용한다.
배열이나 연결 리스트로도 우선순위 큐를 구현할 수 있으나
이 둘을 사용할 시에 최악의 경우로 맨 마지막 인덱스에 요소를 넣기 위해 맨 마지막까지 탐색해야 하는 경우가 발생할 수 있다.
그리고 삽입하기 위한 공간을 마련하기 위해서 요소를 뒤로 밀어야 하는 상황도 발생한다.

하지만 완전 이진 트리 구조를 가진 힙은 탐색하는 데 트리의 높이 만큼의 시간 즉, log n의 시간이 걸리기 때문에 훨씬 효율적이다.

그렇다고 우선순위 큐와 힙이 같은 건 아니다.
우선순위 큐는 엄연히 1차원의 큐 형태를 지니지만, 힙은 완전 이진 트리 구조를 가진다.

* 힙의 장점
병합 정렬처럼 따로 공간을 만들지 않아도 되어 공간복잡도 면에서도 좋고 그렇다고 시간복잡도 면에서도 나쁘지 않다.
퀵 정렬과 병합 정렬 수준으로 빠르기 때문에 자주 사용된다고 한다.
하지만, 그래도 퀵 정렬이 더 빠르다고 한다.

* 힙의 단점
데이터의 크기에 따라 시간복잡도가 바뀌는 자료구조라고 한다.
그리고 데이터의 순서가 heapify로 인해 계속 바뀌기 때문에 불안정 정렬이라는 특징이 있다고 한다.
